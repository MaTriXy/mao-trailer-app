// Generated by Dagger (https://google.github.io/dagger).
package com.movie.maotrailer.di.module;

import com.movie.maotrailer.api.ITMDBService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class NetModule_ProvideITMDBServiceFactory implements Factory<ITMDBService> {
  private final NetModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetModule_ProvideITMDBServiceFactory(
      NetModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ITMDBService get() {
    return provideInstance(module, retrofitProvider);
  }

  public static ITMDBService provideInstance(
      NetModule module, Provider<Retrofit> retrofitProvider) {
    return proxyProvideITMDBService(module, retrofitProvider.get());
  }

  public static NetModule_ProvideITMDBServiceFactory create(
      NetModule module, Provider<Retrofit> retrofitProvider) {
    return new NetModule_ProvideITMDBServiceFactory(module, retrofitProvider);
  }

  public static ITMDBService proxyProvideITMDBService(NetModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideITMDBService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
