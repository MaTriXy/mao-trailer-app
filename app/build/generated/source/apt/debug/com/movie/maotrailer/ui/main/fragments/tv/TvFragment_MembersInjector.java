// Generated by Dagger (https://google.github.io/dagger).
package com.movie.maotrailer.ui.main.fragments.tv;

import android.arch.lifecycle.ViewModelProvider;
import android.support.v4.app.Fragment;
import com.movie.maotrailer.utils.ColumnUtils;
import com.movie.maotrailer.utils.ConnectionUtils;
import com.movie.maotrailer.utils.SharedPreferencesUtil;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import javax.inject.Provider;

public final class TvFragment_MembersInjector implements MembersInjector<TvFragment> {
  private final Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<ColumnUtils> columnUtilsProvider;

  private final Provider<SharedPreferencesUtil> sharedPreferencesUtilProvider;

  private final Provider<ConnectionUtils> connectionUtilsProvider;

  public TvFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<ColumnUtils> columnUtilsProvider,
      Provider<SharedPreferencesUtil> sharedPreferencesUtilProvider,
      Provider<ConnectionUtils> connectionUtilsProvider) {
    this.childFragmentInjectorProvider = childFragmentInjectorProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.columnUtilsProvider = columnUtilsProvider;
    this.sharedPreferencesUtilProvider = sharedPreferencesUtilProvider;
    this.connectionUtilsProvider = connectionUtilsProvider;
  }

  public static MembersInjector<TvFragment> create(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<ColumnUtils> columnUtilsProvider,
      Provider<SharedPreferencesUtil> sharedPreferencesUtilProvider,
      Provider<ConnectionUtils> connectionUtilsProvider) {
    return new TvFragment_MembersInjector(
        childFragmentInjectorProvider,
        viewModelFactoryProvider,
        columnUtilsProvider,
        sharedPreferencesUtilProvider,
        connectionUtilsProvider);
  }

  @Override
  public void injectMembers(TvFragment instance) {
    DaggerFragment_MembersInjector.injectChildFragmentInjector(
        instance, childFragmentInjectorProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectColumnUtils(instance, columnUtilsProvider.get());
    injectSharedPreferencesUtil(instance, sharedPreferencesUtilProvider.get());
    injectConnectionUtils(instance, connectionUtilsProvider.get());
  }

  public static void injectViewModelFactory(
      TvFragment instance, ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  public static void injectColumnUtils(TvFragment instance, ColumnUtils columnUtils) {
    instance.columnUtils = columnUtils;
  }

  public static void injectSharedPreferencesUtil(
      TvFragment instance, SharedPreferencesUtil sharedPreferencesUtil) {
    instance.sharedPreferencesUtil = sharedPreferencesUtil;
  }

  public static void injectConnectionUtils(TvFragment instance, ConnectionUtils connectionUtils) {
    instance.connectionUtils = connectionUtils;
  }
}
