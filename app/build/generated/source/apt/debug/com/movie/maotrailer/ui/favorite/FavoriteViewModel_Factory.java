// Generated by Dagger (https://google.github.io/dagger).
package com.movie.maotrailer.ui.favorite;

import com.movie.maotrailer.data.local.repository.FavoriteThingsRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class FavoriteViewModel_Factory implements Factory<FavoriteViewModel> {
  private final Provider<FavoriteThingsRepository> favoriteThingsRepositoryProvider;

  public FavoriteViewModel_Factory(
      Provider<FavoriteThingsRepository> favoriteThingsRepositoryProvider) {
    this.favoriteThingsRepositoryProvider = favoriteThingsRepositoryProvider;
  }

  @Override
  public FavoriteViewModel get() {
    return provideInstance(favoriteThingsRepositoryProvider);
  }

  public static FavoriteViewModel provideInstance(
      Provider<FavoriteThingsRepository> favoriteThingsRepositoryProvider) {
    return new FavoriteViewModel(favoriteThingsRepositoryProvider.get());
  }

  public static FavoriteViewModel_Factory create(
      Provider<FavoriteThingsRepository> favoriteThingsRepositoryProvider) {
    return new FavoriteViewModel_Factory(favoriteThingsRepositoryProvider);
  }

  public static FavoriteViewModel newFavoriteViewModel(
      FavoriteThingsRepository favoriteThingsRepository) {
    return new FavoriteViewModel(favoriteThingsRepository);
  }
}
